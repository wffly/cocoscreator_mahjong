[2018-01-25 09:58:22.649] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-25 09:58:22.649] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-25 09:58:22.650] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["login_result",{"errcode":0,"errmsg":"ok","data":{"roomid":"024496","conf":{"type":"xzdd","baseScore":1,"zimo":0,"jiangdui":false,"hsz":false,"dianganghua":0,"menqing":false,"tiandihu":true,"maxFan":4,"maxGames":4,"creator":11},"numofgames":0,"seats":[{"userid":11,"score":0,"name":"æ¬§é˜³æœ‰é’±","online":false,"ready":false,"seatindex":0},{"userid":0,"score":0,"name":"","online":false,"ready":false,"seatindex":1},{"userid":0,"score":0,"name":"","online":false,"ready":false,"seatindex":2},{"userid":0,"score":0,"name":"","online":false,"ready":false,"seatindex":3}]}},[11],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-25 10:00:19.440] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-25 10:00:19.440] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-25 10:00:19.441] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["login_result",{"errcode":0,"errmsg":"ok","data":{"roomid":"550704","conf":{"type":"xzdd","baseScore":1,"zimo":0,"jiangdui":true,"hsz":false,"dianganghua":0,"menqing":false,"tiandihu":false,"maxFan":4,"maxGames":4,"creator":11},"numofgames":0,"seats":[{"userid":11,"score":0,"name":"æ¬§é˜³æœ‰é’±","online":false,"ready":false,"seatindex":0},{"userid":0,"score":0,"name":"","online":false,"ready":false,"seatindex":1},{"userid":0,"score":0,"name":"","online":false,"ready":false,"seatindex":2},{"userid":0,"score":0,"name":"","online":false,"ready":false,"seatindex":3}]}},[11],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-25 10:05:53.905] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc socket channel-server-1 is error, remote server connector-server-1 host: 127.0.0.1, port: undefined
[2018-01-25 10:05:53.906] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc socket channel-server-1 is error, remote server connector-server-1 host: 127.0.0.1, port: undefined
[2018-01-25 10:06:23.909] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc channel-server-1 callback timeout 30000, remote server 0 host: 127.0.0.1, port: undefined
[2018-01-25 10:06:23.910] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to send message Error: rpc channel-server-1 callback timeout 30000, remote server 0 host: 127.0.0.1, port: undefined
    at Timeout.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-client\mailboxes\mqtt-mailbox.js:257:16)
    at ontimeout (timers.js:475:11)
    at tryOnTimeout (timers.js:310:5)
    at Timer.listOnTimeout (timers.js:270:5)
[2018-01-25 10:06:23.911] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: connector-server-1, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["login_result",{"errcode":0,"errmsg":"ok","data":{"roomid":"792677","conf":{"type":"xzdd","baseScore":1,"zimo":0,"jiangdui":true,"hsz":false,"dianganghua":0,"menqing":false,"tiandihu":false,"maxFan":4,"maxGames":4,"creator":11},"numofgames":0,"seats":[{"userid":11,"score":0,"name":"æ¬§é˜³æœ‰é’±","online":false,"ready":false,"seatindex":0},{"userid":0,"score":0,"name":"","online":false,"ready":false,"seatindex":1},{"userid":0,"score":0,"name":"","online":false,"ready":false,"seatindex":2},{"userid":0,"score":0,"name":"","online":false,"ready":false,"seatindex":3}]}},[11],{"type":"push","userOptions":{},"isPush":true}]}, error code: 5
[2018-01-25 10:06:23.913] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1516845963908 lastPong: -1
[2018-01-25 15:23:03.533] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:21:14)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:112:11)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
    at Connection.emit (events.js:211:7)
[2018-01-25 15:23:03.534] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:21:14)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:112:11)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
    at Connection.emit (events.js:211:7)
[2018-01-26 11:26:17.920] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.354] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.357] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.362] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.363] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.365] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.367] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.373] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.374] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.375] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.377] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.378] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.379] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.381] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.384] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.386] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:35:34.387] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: callback is not a function
    at C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:14:9
    at Object.utils.invokeCallback (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\util\utils.js:17:14)
    at sendMessageByGroup (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:398:11)
    at ChannelService.pushMessageByUids (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\lib\common\service\channelService.js:121:3)
    at ChannelRemote.backMessage (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:12:25)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
[2018-01-26 13:39:13.305] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.306] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.306] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",96,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.307] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.307] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.307] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",97,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.308] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.308] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.309] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",98,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.310] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.310] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.310] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",99,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.311] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.311] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.311] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",96,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.312] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.312] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.312] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",97,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.313] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.314] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.314] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",98,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.314] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.314] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.314] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",99,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.315] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.315] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.315] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",96,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.315] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.315] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.315] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",97,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.316] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.316] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.316] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",98,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.317] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.317] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.317] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",99,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.317] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.317] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.317] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",96,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.318] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.318] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.318] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",97,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.319] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.319] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.319] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",98,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:39:13.319] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: [object Object]
[2018-01-26 13:39:13.319] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:[object Object]
[2018-01-26 13:39:13.319] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: [object Object], msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",99,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.157] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.157] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.158] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",99,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.159] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.159] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.159] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",100,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.159] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.160] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.160] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",101,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.163] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.163] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.163] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",102,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.164] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.164] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.164] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",99,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.165] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.165] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.165] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",100,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.166] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.167] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.167] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",101,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.168] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.168] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.168] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",102,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.168] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.168] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.169] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",99,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.169] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.169] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.170] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",100,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.171] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.171] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.171] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",101,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.172] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.172] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.172] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",102,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.181] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.182] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.182] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",99,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.183] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.183] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.183] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",100,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.184] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.184] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.184] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",101,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:46:19.186] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.186] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:46:19.186] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",102,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:59:30.388] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:59:30.388] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:59:30.389] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",102,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:59:30.391] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:59:30.391] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:59:30.392] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",102,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:59:30.393] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:59:30.394] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:59:30.394] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",102,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 13:59:30.395] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:59:30.395] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-01-26 13:59:30.395] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_huanpai_over_push",102,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-26 17:30:01.910] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:29:13)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
    at Connection.emit (events.js:211:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:116:13)
    at Connection.emit (events.js:211:7)
[2018-01-29 09:37:55.685] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:29:13)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
    at Connection.emit (events.js:211:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:116:13)
    at Connection.emit (events.js:211:7)
[2018-01-29 09:37:55.690] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\server\game-server\app\servers\channel\remote\ChannelRemote.js:29:13)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:116:13)
    at Connection.emit (events.js:211:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:116:13)
    at Connection.emit (events.js:211:7)
[2018-01-29 10:12:31.126] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 144
[2018-01-29 10:12:31.126] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:144
[2018-01-29 10:12:31.127] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 144, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[141],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-29 10:15:55.394] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 147
[2018-01-29 10:15:55.394] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:147
[2018-01-29 10:15:55.395] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 147, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[144],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-29 10:17:45.753] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 150
[2018-01-29 10:17:45.753] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:150
[2018-01-29 10:17:45.754] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 150, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[147],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-29 10:30:22.006] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 153
[2018-01-29 10:30:22.006] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:153
[2018-01-29 10:30:22.007] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 153, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[150],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-29 13:07:48.906] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 159
[2018-01-29 13:07:48.907] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:159
[2018-01-29 13:07:48.907] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 159, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[156],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 11:21:19.534] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc socket channel-server-1 is error, remote server connector-server-1 host: 127.0.0.1, port: 9002
[2018-01-30 13:15:12.913] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517289292910 lastPong: 1517289282909
[2018-01-30 13:19:16.836] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517289526835 lastPong: 1517289516835
[2018-01-30 13:22:41.818] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517289741817 lastPong: 1517289731817
[2018-01-30 13:29:11.786] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517290131785 lastPong: 1517290121776
[2018-01-30 13:34:39.040] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517290459037 lastPong: 1517290449038
[2018-01-30 13:44:44.755] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517291064754 lastPong: 1517291054755
[2018-01-30 14:01:41.216] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517292081215 lastPong: 1517292071214
[2018-01-30 14:05:53.500] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517292333499 lastPong: 1517292323500
[2018-01-30 14:13:12.417] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517292772412 lastPong: 1517292762410
[2018-01-30 14:20:22.772] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517293202771 lastPong: 1517293192770
[2018-01-30 14:28:00.316] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517293660315 lastPong: 1517293650314
[2018-01-30 15:13:02.519] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 296
[2018-01-30 15:13:02.519] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:296
[2018-01-30 15:13:02.520] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 296, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:13:07.496] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 297
[2018-01-30 15:13:07.496] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:297
[2018-01-30 15:13:07.497] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 297, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:13:10.543] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 298
[2018-01-30 15:13:10.543] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:298
[2018-01-30 15:13:10.544] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 298, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:13:36.529] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 299
[2018-01-30 15:13:36.529] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:299
[2018-01-30 15:13:36.530] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 299, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:13:54.893] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 296
[2018-01-30 15:13:54.893] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:296
[2018-01-30 15:13:54.893] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 296, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:14:11.189] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 297
[2018-01-30 15:14:11.189] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:297
[2018-01-30 15:14:11.189] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 297, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:14:20.937] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 298
[2018-01-30 15:14:20.938] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:298
[2018-01-30 15:14:20.938] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 298, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:14:42.423] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 299
[2018-01-30 15:14:42.423] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:299
[2018-01-30 15:14:42.423] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 299, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:25:19.354] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 299
[2018-01-30 15:25:19.354] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:299
[2018-01-30 15:25:19.355] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 299, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:25:31.840] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 300
[2018-01-30 15:25:31.842] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:300
[2018-01-30 15:25:31.843] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 300, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:25:51.176] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 301
[2018-01-30 15:25:51.176] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:301
[2018-01-30 15:25:51.177] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 301, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:44:47.033] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 302
[2018-01-30 15:44:47.035] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:302
[2018-01-30 15:44:47.036] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 302, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:45:15.849] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 303
[2018-01-30 15:45:15.849] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:303
[2018-01-30 15:45:15.850] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 303, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:45:37.109] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 304
[2018-01-30 15:45:37.110] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:304
[2018-01-30 15:45:37.110] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 304, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:45:55.219] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 305
[2018-01-30 15:45:55.219] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:305
[2018-01-30 15:45:55.220] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 305, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:46:17.227] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 302
[2018-01-30 15:46:17.227] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:302
[2018-01-30 15:46:17.228] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 302, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:46:26.752] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 303
[2018-01-30 15:46:26.752] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:303
[2018-01-30 15:46:26.752] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 303, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:46:30.622] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 304
[2018-01-30 15:46:30.622] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:304
[2018-01-30 15:46:30.622] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 304, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:46:46.403] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 305
[2018-01-30 15:46:46.403] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:305
[2018-01-30 15:46:46.404] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 305, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:46:56.435] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 302
[2018-01-30 15:46:56.435] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:302
[2018-01-30 15:46:56.435] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 302, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:46:59.676] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 303
[2018-01-30 15:46:59.677] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:303
[2018-01-30 15:46:59.677] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 303, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:47:03.095] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 304
[2018-01-30 15:47:03.095] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:304
[2018-01-30 15:47:03.095] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 304, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:47:09.141] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 305
[2018-01-30 15:47:09.141] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:305
[2018-01-30 15:47:09.141] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 305, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:47:16.149] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 302
[2018-01-30 15:47:16.149] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:302
[2018-01-30 15:47:16.149] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 302, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:47:31.969] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 303
[2018-01-30 15:47:31.969] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:303
[2018-01-30 15:47:31.969] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 303, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:47:42.625] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 304
[2018-01-30 15:47:42.626] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:304
[2018-01-30 15:47:42.626] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 304, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:48:22.773] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 305
[2018-01-30 15:48:22.774] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:305
[2018-01-30 15:48:22.774] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 305, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:54:51.769] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 305
[2018-01-30 15:54:51.770] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:305
[2018-01-30 15:54:51.770] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 305, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:55:00.757] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 306
[2018-01-30 15:55:00.757] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:306
[2018-01-30 15:55:00.757] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 306, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:55:30.891] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 307
[2018-01-30 15:55:30.891] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:307
[2018-01-30 15:55:30.891] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 307, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:55:40.114] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 308
[2018-01-30 15:55:40.115] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:308
[2018-01-30 15:55:40.115] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 308, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:55:55.898] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 305
[2018-01-30 15:55:55.898] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:305
[2018-01-30 15:55:55.898] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 305, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:56:07.354] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 306
[2018-01-30 15:56:07.354] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:306
[2018-01-30 15:56:07.354] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 306, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 15:56:16.139] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 307
[2018-01-30 15:56:16.139] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:307
[2018-01-30 15:56:16.139] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 307, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 16:02:16.275] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517299306274 lastPong: 1517299296267
[2018-01-30 16:03:14.872] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 308
[2018-01-30 16:03:14.872] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:308
[2018-01-30 16:03:14.873] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 308, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 16:05:14.837] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517299494833 lastPong: 1517299484831
[2018-01-30 16:05:47.879] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: 309
[2018-01-30 16:05:47.879] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:309
[2018-01-30 16:05:47.879] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: 309, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[null],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-01-30 16:37:47.236] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517301447234 lastPong: 1517301437234
[2018-01-30 16:41:14.012] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1517301653999 lastPong: 1517301644008
[2018-01-30 16:42:58.269] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\jséº»å°†\server\game-server\app\servers\channel\remote\ChannelRemote.js:29:12)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\jséº»å°†\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\jséº»å°†\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\jséº»å°†\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\jséº»å°†\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\jséº»å°†\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
[2018-02-06 15:46:07.669] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc socket channel-server-1 is error, remote server connector-server-1 host: 192.168.1.150, port: 9002
[2018-02-06 16:10:24.804] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc socket channel-server-1 is error, remote server connector-server-1 host: 192.168.1.150, port: 9002
[2018-02-06 16:33:20.678] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc socket channel-server-1 is error, remote server connector-server-1 host: 192.168.1.150, port: 9002
[2018-02-06 18:39:40.717] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:39:40.717] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:39:40.718] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[385],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-06 18:39:42.614] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\ddmj\server\game-server\app\servers\channel\remote\ChannelRemote.js:31:12)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
[2018-02-06 18:39:43.149] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:39:43.150] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:39:43.151] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[386],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-06 18:39:51.053] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\ddmj\server\game-server\app\servers\channel\remote\ChannelRemote.js:31:12)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
[2018-02-06 18:39:51.585] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:39:51.585] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:39:51.585] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[387],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-06 18:42:18.863] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\ddmj\server\game-server\app\servers\channel\remote\ChannelRemote.js:31:12)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
[2018-02-06 18:42:39.705] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\ddmj\server\game-server\app\servers\channel\remote\ChannelRemote.js:31:12)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
[2018-02-06 18:42:40.235] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:42:40.235] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:42:40.235] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[385],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-06 18:55:49.756] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:55:49.756] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:55:49.758] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[388],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-06 18:55:52.042] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\ddmj\server\game-server\app\servers\channel\remote\ChannelRemote.js:31:12)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
[2018-02-06 18:55:52.566] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:55:52.567] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-06 18:55:52.567] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[389],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:44:08.987] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.987] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.987] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_holds_push",[24,22,2,14,3,17,6,17,5,23,3],[392],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:44:08.989] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.989] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.989] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":392,"huanpais":[18,21,22]},[392],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:44:08.990] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.991] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.991] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":392,"huanpais":[]},[393],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:44:08.992] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.992] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.992] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":392,"huanpais":[]},[394],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:44:08.993] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.994] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:44:08.994] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":392,"huanpais":[]},[395],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:49:59.418] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.418] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.419] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_holds_push",[6,26,15,15,13,17,26,10,3,11,12],[395],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:49:59.420] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.420] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.421] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":395,"huanpais":[19,22,23]},[395],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:49:59.421] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.422] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.422] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":395,"huanpais":[]},[396],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:49:59.423] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.423] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.423] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":395,"huanpais":[]},[397],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:49:59.424] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.424] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:49:59.425] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":395,"huanpais":[]},[398],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:54:29.579] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.579] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.580] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_holds_push",[9,13,10,17,16,2,25,8,13,0,17],[398],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:54:29.582] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.582] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.583] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":398,"huanpais":[19,22,24]},[398],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:54:29.584] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.585] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.585] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":398,"huanpais":[]},[399],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:54:29.586] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.586] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.587] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":398,"huanpais":[]},[400],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 10:54:29.588] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.588] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 10:54:29.588] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":398,"huanpais":[]},[401],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:00:08.157] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:00:08.157] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:00:08.158] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":401,"huanpais":[19,22,24]},[401],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:00:08.159] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:00:08.160] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:00:08.160] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":401,"huanpais":[]},[402],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:00:08.161] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:00:08.161] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:00:08.161] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":401,"huanpais":[]},[403],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:00:08.162] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:00:08.162] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:00:08.163] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["huanpai_notify",{"si":401,"huanpais":[]},[404],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:08:50.169] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:08:50.169] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:08:50.170] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[404],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:08:54.807] [ERROR] pomelo-rpc - [31m[mqtt-acceptor] [39mprocess rpc message error TypeError: Cannot read property 'pushMessage' of undefined
    at ChannelRemote.pushMessageInRoom (C:\Users\Administrator\Desktop\ddmj\server\game-server\app\servers\channel\remote\ChannelRemote.js:29:12)
    at Dispatcher.pro.route (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\dispatcher.js:52:10)
    at Acceptor.cb (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\gateway.js:22:16)
    at processMsg (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:138:12)
    at Connection.<anonymous> (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-server\acceptors\mqtt-acceptor.js:62:11)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
    at Connection.emitPacket (C:\Users\Administrator\Desktop\ddmj\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\node_modules\mqtt-connection\connection.js:14:8)
    at emitOne (events.js:96:13)
    at Connection.emit (events.js:188:7)
[2018-02-07 11:08:55.337] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:08:55.337] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:08:55.337] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[405],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:16:47.734] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:16:47.734] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:16:47.734] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[407],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:28:28.676] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:28:28.676] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:28:28.677] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[410],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:28:34.481] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:28:34.482] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:28:34.482] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[411],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:39:17.122] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:17.123] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:17.124] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",54,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:39:17.126] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:17.126] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:17.126] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",54,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:39:17.130] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:17.130] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:17.130] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",54,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:39:17.132] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:17.132] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:17.132] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",54,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:39:23.753] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:23.755] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:23.755] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",53,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:39:23.757] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:23.757] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:23.758] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",53,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:39:23.760] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:23.760] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:23.761] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",53,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-07 11:39:23.764] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] unknown server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:23.764] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to find remote server:function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }
[2018-02-07 11:39:23.764] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: function () {
    // var args = Array.prototype.slice.call(arguments, 0);
    var len = arguments.length;
    var args = new Array(len);
    for (var i = 0; i < len; i++) {
      args[i] = arguments[i];
    }

    var errorArg = args[0]; // first callback argument can be error object, the others are message
    if (errorArg && errorArg instanceof Error) {
      args[0] = cloneError(errorArg);
    }

    var resp;
    if (tracer && tracer.isEnabled) {
      resp = {
        traceId: tracer.id,
        seqId: tracer.seq,
        source: tracer.source,
        id: pkg.id,
        resp: args
      };
    } else {
      resp = {
        id: pkg.id,
        resp: args
      };
    }
    if (acceptor.bufferMsg) {
      enqueue(socket, acceptor, resp);
    } else {
      doSend(socket, resp);
    }
  }, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",53,["connector-server-1"],{"type":"push","userOptions":{},"isPush":true}]}, error code: 2
[2018-02-08 14:10:32.029] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc socket channel-server-1 is error, remote server connector-server-1 host: 192.168.1.250, port: 9002
[2018-02-09 17:36:46.095] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1518168986079 lastPong: 1518168976079
[2018-02-09 17:36:47.657] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc channel-server-1 callback timeout 30000, remote server 392 host: 172.16.252.145, port: 9002
[2018-02-09 17:36:47.657] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to send message Error: rpc channel-server-1 callback timeout 30000, remote server 392 host: 172.16.252.145, port: 9002
    at Timeout.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-client\mailboxes\mqtt-mailbox.js:257:16)
    at ontimeout (timers.js:365:14)
    at tryOnTimeout (timers.js:237:5)
    at Timer.listOnTimeout (timers.js:207:5)
[2018-02-09 17:36:47.657] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: connector-server-1, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_chupai_push",{"route":"game_chupai_push","msg":17},[13,15,17,18],{"type":"push","userOptions":{},"isPush":true}]}, error code: 5
[2018-02-09 17:36:47.657] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc channel-server-1 callback timeout 30000, remote server 393 host: 172.16.252.145, port: 9002
[2018-02-09 17:36:47.657] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to send message Error: rpc channel-server-1 callback timeout 30000, remote server 393 host: 172.16.252.145, port: 9002
    at Timeout.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-client\mailboxes\mqtt-mailbox.js:257:16)
    at ontimeout (timers.js:365:14)
    at tryOnTimeout (timers.js:237:5)
    at Timer.listOnTimeout (timers.js:207:5)
[2018-02-09 17:36:47.657] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: connector-server-1, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_action_push",{},[17],{"type":"push","userOptions":{},"isPush":true}]}, error code: 5
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc channel-server-1 callback timeout 30000, remote server 751 host: 172.16.252.145, port: 9002
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to send message Error: rpc channel-server-1 callback timeout 30000, remote server 751 host: 172.16.252.145, port: 9002
    at Timeout.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-client\mailboxes\mqtt-mailbox.js:257:16)
    at ontimeout (timers.js:365:14)
    at tryOnTimeout (timers.js:237:5)
    at Timer.listOnTimeout (timers.js:207:5)
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: connector-server-1, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",39,[19],{"type":"push","userOptions":{},"isPush":true}]}, error code: 5
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc channel-server-1 callback timeout 30000, remote server 752 host: 172.16.252.145, port: 9002
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to send message Error: rpc channel-server-1 callback timeout 30000, remote server 752 host: 172.16.252.145, port: 9002
    at Timeout.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-client\mailboxes\mqtt-mailbox.js:257:16)
    at ontimeout (timers.js:365:14)
    at tryOnTimeout (timers.js:237:5)
    at Timer.listOnTimeout (timers.js:207:5)
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: connector-server-1, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",39,[17],{"type":"push","userOptions":{},"isPush":true}]}, error code: 5
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc channel-server-1 callback timeout 30000, remote server 753 host: 172.16.252.145, port: 9002
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to send message Error: rpc channel-server-1 callback timeout 30000, remote server 753 host: 172.16.252.145, port: 9002
    at Timeout.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-client\mailboxes\mqtt-mailbox.js:257:16)
    at ontimeout (timers.js:365:14)
    at tryOnTimeout (timers.js:237:5)
    at Timer.listOnTimeout (timers.js:207:5)
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: connector-server-1, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",39,[20],{"type":"push","userOptions":{},"isPush":true}]}, error code: 5
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc channel-server-1 callback timeout 30000, remote server 754 host: 172.16.252.145, port: 9002
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to send message Error: rpc channel-server-1 callback timeout 30000, remote server 754 host: 172.16.252.145, port: 9002
    at Timeout.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-client\mailboxes\mqtt-mailbox.js:257:16)
    at ontimeout (timers.js:365:14)
    at tryOnTimeout (timers.js:237:5)
    at Timer.listOnTimeout (timers.js:207:5)
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: connector-server-1, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["mj_count_push",39,[21],{"type":"push","userOptions":{},"isPush":true}]}, error code: 5
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mrpc channel-server-1 callback timeout 30000, remote server 755 host: 172.16.252.145, port: 9002
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[MailStation] [39m[pomelo-rpc] fail to send message Error: rpc channel-server-1 callback timeout 30000, remote server 755 host: 172.16.252.145, port: 9002
    at Timeout.<anonymous> (C:\Users\Administrator\Desktop\server\game-server\node_modules\pomelo\node_modules\pomelo-rpc\lib\rpc-client\mailboxes\mqtt-mailbox.js:257:16)
    at ontimeout (timers.js:365:14)
    at tryOnTimeout (timers.js:237:5)
    at Timer.listOnTimeout (timers.js:207:5)
[2018-02-11 09:27:58.883] [ERROR] pomelo-rpc - [31m[failprocess] [39mrpc failed with error, remote server: connector-server-1, msg: {"namespace":"sys","service":"channelRemote","method":"pushMessage","args":["game_mopai_push",12,[20],{"type":"push","userOptions":{},"isPush":true}]}, error code: 5
[2018-02-11 09:28:08.274] [ERROR] pomelo-rpc - [31m[mqtt-mailbox] [39mmqtt rpc client channel-server-1 checkKeepAlive timeout from remote server connector-server-1 for 20000 lastPing: 1518312458274 lastPong: 1518312448274
